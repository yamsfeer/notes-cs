import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as s,b as t}from"./app-BzW9chhs.js";const e={},p=t(`<h1 id="编程" tabindex="-1"><a class="header-anchor" href="#编程"><span>编程</span></a></h1><p>编程就是解决问题的能力</p><h2 id="在解决问题之前" tabindex="-1"><a class="header-anchor" href="#在解决问题之前"><span>在解决问题之前</span></a></h2><p>解决问题之前需要先有问题。从现实存在的问题出发。</p><h2 id="如何解决" tabindex="-1"><a class="header-anchor" href="#如何解决"><span>如何解决</span></a></h2><p>问题 -&gt; 抽象 -&gt; 编程 -&gt; 设计 -&gt; 编码</p><p>问题：明确问题，大问题分解成小问题 抽象：用数学、计算思维阐述问题 编程：用相关知识，一步步拆解问题并解决，通常需要数据结构+算法 设计：代码组织，api 设计 编码：写代码，跟所用的语言相关</p><h3 id="编码" tabindex="-1"><a class="header-anchor" href="#编码"><span>编码</span></a></h3><ul><li>对语言本身的理解，比如语言擅长的区域，实践中的细节，API 的设计及如何使用</li><li>基于问题的理解和对语言的理解，选择合适的语言和其他工具</li><li>良好的编程风格</li></ul><h2 id="编程思维" tabindex="-1"><a class="header-anchor" href="#编程思维"><span>编程思维</span></a></h2><h3 id="从数据结构开始" tabindex="-1"><a class="header-anchor" href="#从数据结构开始"><span>从数据结构开始</span></a></h3><p>对于一个功能甚至应用来说，要想实现它们，就要先考虑它的数据结构是什么样的，然后针对这个数据结构进行逻辑操作。</p><p>不要过早考虑如何实现 UI 效果，页面交互怎么实现，要做到没有 UI，功能也能够完成。</p><h3 id="一步一步来" tabindex="-1"><a class="header-anchor" href="#一步一步来"><span>一步一步来</span></a></h3><p>在完成功能的过程中，一旦写完了一个函数或模块，且经过完整的测试后，便不要再考虑其内在逻辑了，只需看它提供的接口，并相信它能很好地工作。否则会对自己写的代码产生动摇，在出现 bug 时，定位问题也会变得混乱。</p><h3 id="不要过早优化" tabindex="-1"><a class="header-anchor" href="#不要过早优化"><span>不要过早优化</span></a></h3><p>不要过早考虑如何优化。</p><h3 id="尽量避免数据冗余" tabindex="-1"><a class="header-anchor" href="#尽量避免数据冗余"><span>尽量避免数据冗余</span></a></h3><p>在一个对象中，有商品的个数 count 和商品价格 price，那么总价格应该基于 count 和 price 计算得出，而不应该作为属性存在于对象中，否则维护数据的一致性会很麻烦。</p><div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
  <span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
  <span class="token literal-property property">total</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token comment">// 不要这样</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&#39;total&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> obj<span class="token punctuation">.</span>count <span class="token operator">*</span> obj<span class="token punctuation">.</span>price
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>或者直接提供一个计算 total 的函数。</p><div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code>obj<span class="token punctuation">.</span><span class="token function-variable function">getTotal</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">return</span> obj<span class="token punctuation">.</span>count <span class="token operator">*</span> obj<span class="token punctuation">.</span>price
</code></pre></div><h3 id="函数签名" tabindex="-1"><a class="header-anchor" href="#函数签名"><span>函数签名</span></a></h3><p>编写函数之前，第一步是要设计函数签名。</p><div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>函数签名 = 函数名 + 参数 + 返回值
</code></pre></div><p>有了函数签名，下一步才是思考具体如何实现。</p><p>当函数实现完成后，调用函数时不要考虑函数内部是如何实现的。</p><h2 id="小技巧" tabindex="-1"><a class="header-anchor" href="#小技巧"><span>小技巧</span></a></h2><h3 id="判断一个数是否是整数" tabindex="-1"><a class="header-anchor" href="#判断一个数是否是整数"><span>判断一个数是否是整数</span></a></h3><p>用 parseInt 将其转化成整数，判断是否有变化。</p><div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> num <span class="token operator">===</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div>`,32),o=[p];function c(l,i){return n(),s("div",null,o)}const d=a(e,[["render",c],["__file","编程思维.html.vue"]]),h=JSON.parse('{"path":"/%E7%BC%96%E7%A8%8B/%E7%BC%96%E7%A8%8B%E6%A6%82%E8%AE%BA/%E7%BC%96%E7%A8%8B%E6%80%9D%E7%BB%B4.html","title":"编程","lang":"zh-CN","frontmatter":{"description":"编程 编程就是解决问题的能力 在解决问题之前 解决问题之前需要先有问题。从现实存在的问题出发。 如何解决 问题 -> 抽象 -> 编程 -> 设计 -> 编码 问题：明确问题，大问题分解成小问题 抽象：用数学、计算思维阐述问题 编程：用相关知识，一步步拆解问题并解决，通常需要数据结构+算法 设计：代码组织，api 设计 编码：写代码，跟所用的语言相关 ...","head":[["meta",{"property":"og:url","content":"https://yamsfeer.github.io/notes-cs/%E7%BC%96%E7%A8%8B/%E7%BC%96%E7%A8%8B%E6%A6%82%E8%AE%BA/%E7%BC%96%E7%A8%8B%E6%80%9D%E7%BB%B4.html"}],["meta",{"property":"og:site_name","content":"yamsfeer"}],["meta",{"property":"og:title","content":"编程"}],["meta",{"property":"og:description","content":"编程 编程就是解决问题的能力 在解决问题之前 解决问题之前需要先有问题。从现实存在的问题出发。 如何解决 问题 -> 抽象 -> 编程 -> 设计 -> 编码 问题：明确问题，大问题分解成小问题 抽象：用数学、计算思维阐述问题 编程：用相关知识，一步步拆解问题并解决，通常需要数据结构+算法 设计：代码组织，api 设计 编码：写代码，跟所用的语言相关 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T15:44:18.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-12T15:44:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"编程\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T15:44:18.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"在解决问题之前","slug":"在解决问题之前","link":"#在解决问题之前","children":[]},{"level":2,"title":"如何解决","slug":"如何解决","link":"#如何解决","children":[{"level":3,"title":"编码","slug":"编码","link":"#编码","children":[]}]},{"level":2,"title":"编程思维","slug":"编程思维","link":"#编程思维","children":[{"level":3,"title":"从数据结构开始","slug":"从数据结构开始","link":"#从数据结构开始","children":[]},{"level":3,"title":"一步一步来","slug":"一步一步来","link":"#一步一步来","children":[]},{"level":3,"title":"不要过早优化","slug":"不要过早优化","link":"#不要过早优化","children":[]},{"level":3,"title":"尽量避免数据冗余","slug":"尽量避免数据冗余","link":"#尽量避免数据冗余","children":[]},{"level":3,"title":"函数签名","slug":"函数签名","link":"#函数签名","children":[]}]},{"level":2,"title":"小技巧","slug":"小技巧","link":"#小技巧","children":[{"level":3,"title":"判断一个数是否是整数","slug":"判断一个数是否是整数","link":"#判断一个数是否是整数","children":[]}]}],"git":{"createdTime":1712936658000,"updatedTime":1712936658000,"contributors":[{"name":"yamsfeer","email":"feer.yams@gmail.com","commits":1}]},"readingTime":{"minutes":2.11,"words":634},"filePathRelative":"编程/编程概论/编程思维.md","localizedDate":"2024年4月12日","autoDesc":true}');export{d as comp,h as data};
