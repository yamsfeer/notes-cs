import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as t,b as i}from"./app-BzW9chhs.js";const l={},n=i('<h1 id="compute-pipeline-通用计算管线" tabindex="-1"><a class="header-anchor" href="#compute-pipeline-通用计算管线"><span>compute pipeline 通用计算管线</span></a></h1><h2 id="并行计算" tabindex="-1"><a class="header-anchor" href="#并行计算"><span>并行计算</span></a></h2><h3 id="通讯模式" tabindex="-1"><a class="header-anchor" href="#通讯模式"><span>通讯模式</span></a></h3><p>并行处理前后，数据的对应关系</p><ul><li>映射 map</li><li>聚合 gather</li><li>分散 scaftter</li><li>模板 stencil</li><li>转换 transpose</li><li>压缩 reduce</li><li>重排 scan/sort</li></ul><h3 id="高效并行策略" tabindex="-1"><a class="header-anchor" href="#高效并行策略"><span>高效并行策略</span></a></h3><ul><li>规约</li><li>扫描/分段扫描</li></ul><h3 id="shader-加载方式" tabindex="-1"><a class="header-anchor" href="#shader-加载方式"><span>shader 加载方式</span></a></h3><p>1d,2d,3d 模式</p><h3 id="cpu-gpu同步以及协同" tabindex="-1"><a class="header-anchor" href="#cpu-gpu同步以及协同"><span>CPU/GPU同步以及协同</span></a></h3><h3 id="内存使用" tabindex="-1"><a class="header-anchor" href="#内存使用"><span>内存使用</span></a></h3><h3 id="性能优化" tabindex="-1"><a class="header-anchor" href="#性能优化"><span>性能优化</span></a></h3><ul><li>合并全局内存</li><li>避免线程发散</li></ul><h3 id="mpi" tabindex="-1"><a class="header-anchor" href="#mpi"><span>MPI</span></a></h3><p>集群</p><h3 id="高维数据并行计算" tabindex="-1"><a class="header-anchor" href="#高维数据并行计算"><span>高维数据并行计算</span></a></h3><h2 id="数据传递" tabindex="-1"><a class="header-anchor" href="#数据传递"><span>数据传递</span></a></h2><p>只能用 bind group</p><h2 id="获取结果" tabindex="-1"><a class="header-anchor" href="#获取结果"><span>获取结果</span></a></h2><p>创建 read buffer，这是一个临时共享 buffer</p><p>GPU 同步 readbuffer</p><p>cpu 建立映射</p>',22),p=[n];function r(s,c){return a(),t("div",null,p)}const o=e(l,[["render",r],["__file","compute-pipeline.html.vue"]]),m=JSON.parse('{"path":"/%E5%9B%BE%E5%BD%A2%E5%AD%A6/webGPU/compute-pipeline.html","title":"compute pipeline 通用计算管线","lang":"zh-CN","frontmatter":{"description":"compute pipeline 通用计算管线 并行计算 通讯模式 并行处理前后，数据的对应关系 映射 map 聚合 gather 分散 scaftter 模板 stencil 转换 transpose 压缩 reduce 重排 scan/sort 高效并行策略 规约 扫描/分段扫描 shader 加载方式 1d,2d,3d 模式 CPU/GPU同步以...","head":[["meta",{"property":"og:url","content":"https://yamsfeer.github.io/notes-cs/%E5%9B%BE%E5%BD%A2%E5%AD%A6/webGPU/compute-pipeline.html"}],["meta",{"property":"og:site_name","content":"yamsfeer"}],["meta",{"property":"og:title","content":"compute pipeline 通用计算管线"}],["meta",{"property":"og:description","content":"compute pipeline 通用计算管线 并行计算 通讯模式 并行处理前后，数据的对应关系 映射 map 聚合 gather 分散 scaftter 模板 stencil 转换 transpose 压缩 reduce 重排 scan/sort 高效并行策略 规约 扫描/分段扫描 shader 加载方式 1d,2d,3d 模式 CPU/GPU同步以..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T15:44:18.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-12T15:44:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"compute pipeline 通用计算管线\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T15:44:18.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"并行计算","slug":"并行计算","link":"#并行计算","children":[{"level":3,"title":"通讯模式","slug":"通讯模式","link":"#通讯模式","children":[]},{"level":3,"title":"高效并行策略","slug":"高效并行策略","link":"#高效并行策略","children":[]},{"level":3,"title":"shader 加载方式","slug":"shader-加载方式","link":"#shader-加载方式","children":[]},{"level":3,"title":"CPU/GPU同步以及协同","slug":"cpu-gpu同步以及协同","link":"#cpu-gpu同步以及协同","children":[]},{"level":3,"title":"内存使用","slug":"内存使用","link":"#内存使用","children":[]},{"level":3,"title":"性能优化","slug":"性能优化","link":"#性能优化","children":[]},{"level":3,"title":"MPI","slug":"mpi","link":"#mpi","children":[]},{"level":3,"title":"高维数据并行计算","slug":"高维数据并行计算","link":"#高维数据并行计算","children":[]}]},{"level":2,"title":"数据传递","slug":"数据传递","link":"#数据传递","children":[]},{"level":2,"title":"获取结果","slug":"获取结果","link":"#获取结果","children":[]}],"git":{"createdTime":1712936658000,"updatedTime":1712936658000,"contributors":[{"name":"yamsfeer","email":"feer.yams@gmail.com","commits":1}]},"readingTime":{"minutes":0.49,"words":148},"filePathRelative":"图形学/webGPU/compute-pipeline.md","localizedDate":"2024年4月12日","autoDesc":true}');export{o as comp,m as data};
