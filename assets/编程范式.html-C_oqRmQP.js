import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as t,b as n}from"./app-BzW9chhs.js";const l={},r=n('<h1 id="编程范式" tabindex="-1"><a class="header-anchor" href="#编程范式"><span>编程范式</span></a></h1><h2 id="面向过程" tabindex="-1"><a class="header-anchor" href="#面向过程"><span>面向过程</span></a></h2><h2 id="面向对象" tabindex="-1"><a class="header-anchor" href="#面向对象"><span>面向对象</span></a></h2><h2 id="函数式" tabindex="-1"><a class="header-anchor" href="#函数式"><span>函数式</span></a></h2><h3 id="lambda-演算" tabindex="-1"><a class="header-anchor" href="#lambda-演算"><span>lambda 演算</span></a></h3><h3 id="范畴论" tabindex="-1"><a class="header-anchor" href="#范畴论"><span>范畴论</span></a></h3><h2 id="多范式编程" tabindex="-1"><a class="header-anchor" href="#多范式编程"><span>多范式编程</span></a></h2><p>面向对象关注对象的属性，行为以及对象间的关系；函数式编程关注计算的过程，计算的过程用函数表示。</p><p>各编程范式有各自擅长的问题领域，可按具体问题选择编程范式，而不是局限于一种。 面向对象中有函数，函数式中有副作用，他们两者都无法涵盖所有的情况，需要结合使用。</p><h2 id="结构化程序设计" tabindex="-1"><a class="header-anchor" href="#结构化程序设计"><span>结构化程序设计</span></a></h2><p>三要素：顺序、条件、循环</p>',11),i=[r];function s(o,c){return a(),t("div",null,i)}const p=e(l,[["render",s],["__file","编程范式.html.vue"]]),m=JSON.parse('{"path":"/%E7%BC%96%E7%A8%8B/%E7%BC%96%E7%A8%8B%E6%A6%82%E8%AE%BA/%E7%BC%96%E7%A8%8B%E8%8C%83%E5%BC%8F.html","title":"编程范式","lang":"zh-CN","frontmatter":{"description":"编程范式 面向过程 面向对象 函数式 lambda 演算 范畴论 多范式编程 面向对象关注对象的属性，行为以及对象间的关系；函数式编程关注计算的过程，计算的过程用函数表示。 各编程范式有各自擅长的问题领域，可按具体问题选择编程范式，而不是局限于一种。 面向对象中有函数，函数式中有副作用，他们两者都无法涵盖所有的情况，需要结合使用。 结构化程序设计 三要...","head":[["meta",{"property":"og:url","content":"https://yamsfeer.github.io/notes-cs/%E7%BC%96%E7%A8%8B/%E7%BC%96%E7%A8%8B%E6%A6%82%E8%AE%BA/%E7%BC%96%E7%A8%8B%E8%8C%83%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"yamsfeer"}],["meta",{"property":"og:title","content":"编程范式"}],["meta",{"property":"og:description","content":"编程范式 面向过程 面向对象 函数式 lambda 演算 范畴论 多范式编程 面向对象关注对象的属性，行为以及对象间的关系；函数式编程关注计算的过程，计算的过程用函数表示。 各编程范式有各自擅长的问题领域，可按具体问题选择编程范式，而不是局限于一种。 面向对象中有函数，函数式中有副作用，他们两者都无法涵盖所有的情况，需要结合使用。 结构化程序设计 三要..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T15:44:18.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-12T15:44:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"编程范式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T15:44:18.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"面向过程","slug":"面向过程","link":"#面向过程","children":[]},{"level":2,"title":"面向对象","slug":"面向对象","link":"#面向对象","children":[]},{"level":2,"title":"函数式","slug":"函数式","link":"#函数式","children":[{"level":3,"title":"lambda 演算","slug":"lambda-演算","link":"#lambda-演算","children":[]},{"level":3,"title":"范畴论","slug":"范畴论","link":"#范畴论","children":[]}]},{"level":2,"title":"多范式编程","slug":"多范式编程","link":"#多范式编程","children":[]},{"level":2,"title":"结构化程序设计","slug":"结构化程序设计","link":"#结构化程序设计","children":[]}],"git":{"createdTime":1712936658000,"updatedTime":1712936658000,"contributors":[{"name":"yamsfeer","email":"feer.yams@gmail.com","commits":1}]},"readingTime":{"minutes":0.52,"words":156},"filePathRelative":"编程/编程概论/编程范式.md","localizedDate":"2024年4月12日","autoDesc":true}');export{p as comp,m as data};
