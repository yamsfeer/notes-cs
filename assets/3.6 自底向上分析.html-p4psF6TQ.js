import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as l,b as n,a as s,d as t}from"./app-BzW9chhs.js";const i={},m=n(`<h1 id="自底向上分析" tabindex="-1"><a class="header-anchor" href="#自底向上分析"><span>自底向上分析</span></a></h1><p>前面介绍的<strong>递归下降分析算法</strong>和<strong>LL(1)分析算法</strong>都属于<strong>自顶向下分析算法</strong>，下面要介绍的是<strong>自底向上分析算法</strong>。</p><p>在自底向上分析算法中，最重要、应用最广泛的一类算法是LR分析算法。</p><p>LR分析算法也叫<strong>移进-归约算法</strong>，在<code>YACC</code>、<code>bison</code>等语法分析器生成器中被广泛使用。</p><p>LR分析算法中有<code>LR(0)</code>、<code>SLR</code>、<code>LR(1)</code>几种算法。</p><p>LL(1)分析算法：<strong>从左(Left)向右读入程序，选择最左(L)推导，采用一个(1)前看符号</strong>。</p><ul><li><p>优点：算法运行高效</p></li><li><p>缺点：能分析的文法类型受限、通常需要改写文法</p></li></ul><p>LR(0)分析算法：<strong>从左(Left)向右读入程序，选择最右(R)推导，不采用（0）前看符号</strong>。</p><ul><li><p>优点：算法运行高效、容易实现、与LL(1)相比能分析更多文法</p></li><li><p>缺点：能分析的文法仍有限</p></li></ul><h2 id="自底向上分析的基本思想" tabindex="-1"><a class="header-anchor" href="#自底向上分析的基本思想"><span>自底向上分析的基本思想</span></a></h2><p>假设有如下文法：</p><div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>0: S -&gt; E
1: E -&gt; E + T
2:    | T
3: T -&gt; T * F
4:    | F
5: F -&gt; n
</code></pre></div><p>在自顶向下分析算法中，我们是<strong>从文法出发</strong>，看<strong>文法能否推导出句子</strong>；</p><p>而在自底向上分析算法中，我们是<strong>从句子出发</strong>，看<strong>句子能否通过归约得出文法得到开始符号S</strong>。</p><p>以句子<code>2 + 3 * 4</code>为例，它的归约过程如下：</p><div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>2 + 3 * 4
F + 3 * 4
T + 3 * 4
E + 3 * 4
E + F * 4
E + T * 4
E + T * F
E + T
E
S
</code></pre></div><p>上述过程其实是一个最右推导的逆过程。从底往上看，在<code>E + T -&gt; E + T * 4</code>过程中，我们选择的是最右边的<code>T</code>来做推导。</p><h3 id="点记号" tabindex="-1"><a class="header-anchor" href="#点记号"><span>点记号</span></a></h3><p>为了方便标记语法分析器已经读入了多少输入，可以使用一个点记号做标记。点记号左边是已经读入的，右边是剩余的输入。</p><p>上述的输入过程用点记号标记如下图：</p><img src="https://raw.githubusercontent.com/yamsfeer/pic-bed/master/008i3skNgy1gts72hdg8wj606g08kglp02.jpg" style="zoom:90%;"><h3 id="移进-归约" tabindex="-1"><a class="header-anchor" href="#移进-归约"><span>移进-归约</span></a></h3><p>有了点记号后，上述归约过程，可以总结为：</p>`,23),p=s("ul",null,[s("li",null,[s("p",null,"新建有一个栈")]),s("li",null,[s("p",null,"移进：每次从点记号右边将符号入栈（点记号右移）")]),s("li",null,[s("p",null,"归约：将栈顶上若干个符号（某产生式的右部）逆推导出左部非终结符"),s("p",null,[t("比如产生式"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"A"),s("mo",null,"→"),s("msub",null,[s("mi",null,"β"),s("mn",null,"1")]),s("mo",null,"…"),s("msub",null,[s("mi",null,"β"),s("mi",null,"n")])]),s("annotation",{encoding:"application/x-tex"},"A \\to \\beta_1\\dots\\beta_n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal"},"A"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"→"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05278em"}},"β"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0528em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},"…"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05278em"}},"β"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0528em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),t("，如果"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"β"),s("mn",null,"1")]),s("mo",null,"…"),s("msub",null,[s("mi",null,"β"),s("mi",null,"n")])]),s("annotation",{encoding:"application/x-tex"},"\\beta_1\\dots\\beta_n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05278em"}},"β"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0528em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},"…"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05278em"}},"β"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0528em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),t("在栈顶，则弹出"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"β"),s("mi",null,"n")]),s("mo",null,"…"),s("msub",null,[s("mi",null,"β"),s("mn",null,"1")])]),s("annotation",{encoding:"application/x-tex"},"\\beta_n\\dots\\beta_1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05278em"}},"β"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0528em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},"…"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05278em"}},"β"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0528em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),t("，然后压入"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"A")]),s("annotation",{encoding:"application/x-tex"},"A")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal"},"A")])])]),t("。")])])],-1),r=s("p",null,"从下图不难看出，点记号左侧的恰好就是栈内元素。",-1),c=s("img",{src:"https://raw.githubusercontent.com/yamsfeer/pic-bed/master/008i3skNgy1gts72hdg8wj606g08kglp02.jpg",style:{zoom:"90%"}},null,-1),o=s("p",null,[t("那么，"),s("strong",null,"如何确定移进和归约的时机"),t("是接下来要考虑的问题。")],-1),h=[m,p,r,c,o];function g(d,u){return e(),l("div",null,h)}const E=a(i,[["render",g],["__file","3.6 自底向上分析.html.vue"]]),x=JSON.parse('{"path":"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/3.6%20%E8%87%AA%E5%BA%95%E5%90%91%E4%B8%8A%E5%88%86%E6%9E%90.html","title":"自底向上分析","lang":"zh-CN","frontmatter":{"description":"自底向上分析 前面介绍的递归下降分析算法和LL(1)分析算法都属于自顶向下分析算法，下面要介绍的是自底向上分析算法。 在自底向上分析算法中，最重要、应用最广泛的一类算法是LR分析算法。 LR分析算法也叫移进-归约算法，在YACC、bison等语法分析器生成器中被广泛使用。 LR分析算法中有LR(0)、SLR、LR(1)几种算法。 LL(1)分析算法：从...","head":[["meta",{"property":"og:url","content":"https://yamsfeer.github.io/notes-cs/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/3.6%20%E8%87%AA%E5%BA%95%E5%90%91%E4%B8%8A%E5%88%86%E6%9E%90.html"}],["meta",{"property":"og:site_name","content":"yamsfeer"}],["meta",{"property":"og:title","content":"自底向上分析"}],["meta",{"property":"og:description","content":"自底向上分析 前面介绍的递归下降分析算法和LL(1)分析算法都属于自顶向下分析算法，下面要介绍的是自底向上分析算法。 在自底向上分析算法中，最重要、应用最广泛的一类算法是LR分析算法。 LR分析算法也叫移进-归约算法，在YACC、bison等语法分析器生成器中被广泛使用。 LR分析算法中有LR(0)、SLR、LR(1)几种算法。 LL(1)分析算法：从..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T15:44:18.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-12T15:44:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"自底向上分析\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T15:44:18.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"自底向上分析的基本思想","slug":"自底向上分析的基本思想","link":"#自底向上分析的基本思想","children":[{"level":3,"title":"点记号","slug":"点记号","link":"#点记号","children":[]},{"level":3,"title":"移进-归约","slug":"移进-归约","link":"#移进-归约","children":[]}]}],"git":{"createdTime":1712936658000,"updatedTime":1712936658000,"contributors":[{"name":"yamsfeer","email":"feer.yams@gmail.com","commits":1}]},"readingTime":{"minutes":2.26,"words":679},"filePathRelative":"计算机基础/编译原理/3.6 自底向上分析.md","localizedDate":"2024年4月12日","autoDesc":true}');export{E as comp,x as data};
