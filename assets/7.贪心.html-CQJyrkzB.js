import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as t}from"./app-BzW9chhs.js";const p={},o=t(`<h1 id="贪心" tabindex="-1"><a class="header-anchor" href="#贪心"><span>贪心</span></a></h1><h2 id="优势洗牌-田忌赛马-870" tabindex="-1"><a class="header-anchor" href="#优势洗牌-田忌赛马-870"><span>优势洗牌 ( 田忌赛马 870 )</span></a></h2><p>打得过就打，打不过就拿自己的垃圾和对方的精锐互换。</p><p>将马按照战斗力排序，然后按照排名一一对比。如果田忌的马能赢，那就比赛，如果赢不了，那就换个垫底的来送人头，保存实力。</p><div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">advantageCount</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums1<span class="token punctuation">,</span> nums2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> n <span class="token operator">=</span> nums1<span class="token punctuation">.</span>length

  <span class="token comment">// 初始化下标数组，用于记录排序后的下标</span>
  <span class="token keyword">const</span> index1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> index<span class="token punctuation">)</span>
  <span class="token keyword">const</span> index2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> index<span class="token punctuation">)</span>

  <span class="token comment">// 从大到小排序，注意记录的是 nums1 和 nums2 的下标</span>
  index1<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> nums1<span class="token punctuation">[</span>b<span class="token punctuation">]</span> <span class="token operator">-</span> nums1<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// a,b 都是下标</span>
  index2<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> nums2<span class="token punctuation">[</span>b<span class="token punctuation">]</span> <span class="token operator">-</span> nums2<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// a,b 都是下标</span>

  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
  <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> right <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token number">1</span> <span class="token comment">// 指向 nums1 的两端，方便找低等马</span>

  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> num1Best <span class="token operator">=</span> nums1<span class="token punctuation">[</span>index1<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">]</span>
    <span class="token keyword">const</span> num2Best <span class="token operator">=</span> nums2<span class="token punctuation">[</span>index2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span>

    <span class="token keyword">const</span> targetIndex <span class="token operator">=</span> index2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token comment">// 当前局，nums2 的编号</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>num1Best <span class="token operator">&lt;=</span> num2Best<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 不敌，用垃圾马送人头</span>
      <span class="token keyword">const</span> num1Worst <span class="token operator">=</span> nums1<span class="token punctuation">[</span>index1<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">]</span>
      res<span class="token punctuation">[</span>targetIndex<span class="token punctuation">]</span> <span class="token operator">=</span> num1Worst
      left<span class="token operator">++</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// 比得过就比</span>
      res<span class="token punctuation">[</span>targetIndex<span class="token punctuation">]</span> <span class="token operator">=</span> num1Best
      right<span class="token operator">--</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> res
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div>`,5),e=[o];function c(u,l){return s(),a("div",null,e)}const i=n(p,[["render",c],["__file","7.贪心.html.vue"]]),m=JSON.parse('{"path":"/%E7%BC%96%E7%A8%8B/leetcode/7.%E8%B4%AA%E5%BF%83.html","title":"贪心","lang":"zh-CN","frontmatter":{"description":"贪心 优势洗牌 ( 田忌赛马 870 ) 打得过就打，打不过就拿自己的垃圾和对方的精锐互换。 将马按照战斗力排序，然后按照排名一一对比。如果田忌的马能赢，那就比赛，如果赢不了，那就换个垫底的来送人头，保存实力。","head":[["meta",{"property":"og:url","content":"https://yamsfeer.github.io/notes-cs/%E7%BC%96%E7%A8%8B/leetcode/7.%E8%B4%AA%E5%BF%83.html"}],["meta",{"property":"og:site_name","content":"yamsfeer"}],["meta",{"property":"og:title","content":"贪心"}],["meta",{"property":"og:description","content":"贪心 优势洗牌 ( 田忌赛马 870 ) 打得过就打，打不过就拿自己的垃圾和对方的精锐互换。 将马按照战斗力排序，然后按照排名一一对比。如果田忌的马能赢，那就比赛，如果赢不了，那就换个垫底的来送人头，保存实力。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T15:44:18.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-12T15:44:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"贪心\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T15:44:18.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"优势洗牌 ( 田忌赛马 870 )","slug":"优势洗牌-田忌赛马-870","link":"#优势洗牌-田忌赛马-870","children":[]}],"git":{"createdTime":1712936658000,"updatedTime":1712936658000,"contributors":[{"name":"yamsfeer","email":"feer.yams@gmail.com","commits":1}]},"readingTime":{"minutes":0.9,"words":269},"filePathRelative":"编程/leetcode/7.贪心.md","localizedDate":"2024年4月12日","autoDesc":true}');export{i as comp,m as data};
