import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as a,b as i}from"./app-BzW9chhs.js";const o={},s=i('<h1 id="着色-shading" tabindex="-1"><a class="header-anchor" href="#着色-shading"><span>着色( shading )</span></a></h1><p>到目前为止，经过 MVP 等一系列变换和光栅化后，理论上我们已经可以得到一张图片了。</p><img class="img-mid" src="https://raw.githubusercontent.com/yamsfeer/pic-bed/master/e6c9d24egy1h3pbza5ygbj20qa0mk75v.jpg" alt="image-20220629191848645" style="zoom:45%;"><p>下一步需要进行着色。</p><p>简单来说，<strong>着色 <em>( shading )</em> 就是计算每个采样像素点的颜色</strong>。如果简单地为一个物体赋予同一个颜色，缺乏明暗效果会使物体没有真实感，如下左图。为此我们需要光照模型来得到右图的结果。</p><img class="img-mid" src="https://raw.githubusercontent.com/yamsfeer/pic-bed/master/e6c9d24egy1h3qt0wpw8fj216e0mcaci.jpg" alt="result" style="zoom:35%;"><p>着色也可以认为是<strong>对物体应用材质的过程</strong>，比如石膏球和金属球的材质是不同的，不同材质会对光产生不同的反射或吸收。</p><p><strong>物体的材质和它应用的光照模型是对应的</strong>。</p><p>本章节会介绍：</p><ul><li>泛光模型</li><li><em>Lambert</em> 漫反射模型</li><li><em>Phong</em> 模型</li><li><em>Blinn-Phong</em> 模型</li></ul><p>局部光照模型不是真正准确的模型，其优点是计算快且效果可以接受，它被广泛地运用在各种场景中。后文介绍的光线追踪可以得到更真实的光照效果。</p>',11),r=[s];function n(m,c){return t(),a("div",null,r)}const d=e(o,[["render",n],["__file","3.0着色.html.vue"]]),l=JSON.parse('{"path":"/%E5%9B%BE%E5%BD%A2%E5%AD%A6/games101/3.0%E7%9D%80%E8%89%B2.html","title":"着色( shading )","lang":"zh-CN","frontmatter":{"description":"着色( shading ) 到目前为止，经过 MVP 等一系列变换和光栅化后，理论上我们已经可以得到一张图片了。 image-20220629191848645 下一步需要进行着色。 简单来说，着色 ( shading ) 就是计算每个采样像素点的颜色。如果简单地为一个物体赋予同一个颜色，缺乏明暗效果会使物体没有真实感，如下左图。为此我们需要光照模型来...","head":[["meta",{"property":"og:url","content":"https://yamsfeer.github.io/notes-cs/%E5%9B%BE%E5%BD%A2%E5%AD%A6/games101/3.0%E7%9D%80%E8%89%B2.html"}],["meta",{"property":"og:site_name","content":"yamsfeer"}],["meta",{"property":"og:title","content":"着色( shading )"}],["meta",{"property":"og:description","content":"着色( shading ) 到目前为止，经过 MVP 等一系列变换和光栅化后，理论上我们已经可以得到一张图片了。 image-20220629191848645 下一步需要进行着色。 简单来说，着色 ( shading ) 就是计算每个采样像素点的颜色。如果简单地为一个物体赋予同一个颜色，缺乏明暗效果会使物体没有真实感，如下左图。为此我们需要光照模型来..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T15:44:18.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-12T15:44:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"着色( shading )\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T15:44:18.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1712936658000,"updatedTime":1712936658000,"contributors":[{"name":"yamsfeer","email":"feer.yams@gmail.com","commits":1}]},"readingTime":{"minutes":1.02,"words":306},"filePathRelative":"图形学/games101/3.0着色.md","localizedDate":"2024年4月12日","autoDesc":true}');export{d as comp,l as data};
